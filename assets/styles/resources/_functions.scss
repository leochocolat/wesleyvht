@mixin fluid-type($min-font-size, $max-font-size) {
    $u1: unit($min-viewport-width);
    $u2: unit($max-viewport-width);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
        & {
            font-size: $min-font-size;

            @media (min-width: $min-viewport-width) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-viewport-width}) / #{strip-unit($max-viewport-width - $min-viewport-width)}));
            }

            @media (min-width: $max-viewport-width) {
                font-size: $max-font-size;
            }
        }
    }
}

@mixin respond-to($name) {
    @if map-has-key($breakpoints, $name) {
        @media #{inspect(map-get($breakpoints, $name))} {
            @content;
        }
    }

    @else {
        @warn 'Unfortunately, no value could retieved from `#{$name}`. Please make sure it is defined in the `$breakpoints` map.';
    }
}

@mixin unselectable {
    -webkit-touch-callout: none !important;
    -webkit-user-select: none !important;
    -khtml-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
}
